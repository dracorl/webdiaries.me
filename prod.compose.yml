services:
  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - webdiaries-net

  blog-service:
    build: ./blog-service
    environment:
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_AUTH_SOURCE=${MONGODB_AUTH_SOURCE}
      - NODE_ENV=production
      - BIND_API=${BIND_API}
      - BIND_API_KEY=${BIND_API_KEY}
      - YANDEX_USER=${YANDEX_USER}
      - YANDEX_PASS=${YANDEX_PASS}
      - SERVER_IP=${SERVER_IP}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${your_refresh_token_secret}
    networks:
      - webdiaries-net

  user-dashboard:
    build:
      context: ./user-dashboard
      args:
        PORT: ${VITE_USER_DASHBOARD_PORT}
    environment:
      - NODE_ENV=production
      - VITE_BACKEND_API=${VITE_BACKEND_API}
    volumes:
      - ./user-dashboard-build:/app/dist
    networks:
      - webdiaries-net

  frontend:
    build:
      context: ./frontend
      args:
        PORT: ${VITE_FRONTEND_PORT}
    environment:
      - NODE_ENV=production
      - VITE_BACKEND_API=${VITE_BACKEND_API}
    volumes:
      - ./frontend-build:/app/dist
    networks:
      - webdiaries-net

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod.nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot-certs:/etc/letsencrypt
      - ./certbot-webroot:/etc/letsencrypt/webroot
      - ./user-dashboard-build:/usr/share/nginx/html/user-dashboard
      - ./frontend-build:/usr/share/nginx/html/frontend
    depends_on:
      - blog-service
      - user-dashboard
      - frontend
      - certbot
    networks:
      - webdiaries-net

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot-certs:/etc/letsencrypt
      - ./certbot-webroot:/etc/letsencrypt/webroot
      - ./rfc2136.ini:/etc/letsencrypt/rfc2136.ini:ro
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        pip install certbot-dns-rfc2136
        chmod 600 /etc/letsencrypt/rfc2136.ini
        certbot certonly --non-interactive --agree-tos --email dracorlll@gmail.com \
          --dns-rfc2136 --dns-rfc2136-credentials /etc/letsencrypt/rfc2136.ini \
          --dns-rfc2136-propagation-seconds 60 \
          -d webdiaries.online -d *.webdiaries.online --verbose || true
        while true; do
          sleep 30d
          certbot renew --dns-rfc2136 --dns-rfc2136-credentials /etc/letsencrypt/rfc2136.ini --verbose
        done
    networks:
      - webdiaries-net

networks:
  webdiaries-net:
    driver: bridge

volumes:
  mongo-data:
  certbot-certs:
  certbot-webroot:
  user-dashboard-build:
  frontend-build:
